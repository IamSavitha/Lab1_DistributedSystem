{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../../services/api';\nconst initialState = {\n  travelerInfo: null,\n  isLoggedIn: false,\n  loading: false,\n  error: null\n};\n\n// Async thunk for signup\nexport const signupTraveler = createAsyncThunk('traveler/signup', async ({\n  userData,\n  navigate\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.post('/traveler/signup', userData);\n\n    // Success - navigate to login\n    navigate('/traveler/login');\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Signup failed');\n  }\n});\nconst travelerSlice = createSlice({\n  name: 'traveler',\n  initialState,\n  reducers: {\n    loginTraveler(state, action) {\n      state.travelerInfo = action.payload;\n      state.isLoggedIn = true;\n    },\n    logoutTraveler(state) {\n      state.travelerInfo = null;\n      state.isLoggedIn = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(signupTraveler.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(signupTraveler.fulfilled, state => {\n      state.loading = false;\n    }).addCase(signupTraveler.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  loginTraveler,\n  logoutTraveler\n} = travelerSlice.actions;\nexport default travelerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","initialState","travelerInfo","isLoggedIn","loading","error","signupTraveler","userData","navigate","rejectWithValue","response","post","data","_error$response","travelerSlice","name","reducers","loginTraveler","state","action","payload","logoutTraveler","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["D:/236/lab1/Lab1_DistributedSystem/frontend/src/features/traveler/travelerSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport api from '../../services/api';\r\n\r\nconst initialState = {\r\n  travelerInfo: null,\r\n  isLoggedIn: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Async thunk for signup\r\nexport const signupTraveler = createAsyncThunk(\r\n  'traveler/signup',\r\n  async ({ userData, navigate }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await api.post('/traveler/signup', userData);\r\n      \r\n      // Success - navigate to login\r\n      navigate('/traveler/login');\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || 'Signup failed');\r\n    }\r\n  }\r\n);\r\n\r\nconst travelerSlice = createSlice({\r\n  name: 'traveler',\r\n  initialState,\r\n  reducers: {\r\n    loginTraveler(state, action) {\r\n      state.travelerInfo = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n    logoutTraveler(state) {\r\n      state.travelerInfo = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(signupTraveler.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(signupTraveler.fulfilled, (state) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(signupTraveler.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { loginTraveler, logoutTraveler } = travelerSlice.actions;\r\nexport default travelerSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,oBAAoB;AAEpC,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,KAAK;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAC5C,iBAAiB,EACjB,OAAO;EAAEQ,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,kBAAkB,EAAEJ,QAAQ,CAAC;;IAE7D;IACAC,QAAQ,CAAC,iBAAiB,CAAC;IAE3B,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;IAAA,IAAAQ,eAAA;IACd,OAAOJ,eAAe,CAAC,EAAAI,eAAA,GAAAR,KAAK,CAACK,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBD,IAAI,KAAI,eAAe,CAAC;EACjE;AACF,CACF,CAAC;AAED,MAAME,aAAa,GAAGhB,WAAW,CAAC;EAChCiB,IAAI,EAAE,UAAU;EAChBd,YAAY;EACZe,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3BD,KAAK,CAAChB,YAAY,GAAGiB,MAAM,CAACC,OAAO;MACnCF,KAAK,CAACf,UAAU,GAAG,IAAI;IACzB,CAAC;IACDkB,cAAcA,CAACH,KAAK,EAAE;MACpBA,KAAK,CAAChB,YAAY,GAAG,IAAI;MACzBgB,KAAK,CAACf,UAAU,GAAG,KAAK;IAC1B;EACF,CAAC;EACDmB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,cAAc,CAACmB,OAAO,EAAGP,KAAK,IAAK;MAC1CA,KAAK,CAACd,OAAO,GAAG,IAAI;MACpBc,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDmB,OAAO,CAAClB,cAAc,CAACoB,SAAS,EAAGR,KAAK,IAAK;MAC5CA,KAAK,CAACd,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDoB,OAAO,CAAClB,cAAc,CAACqB,QAAQ,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACb,KAAK,GAAGc,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,aAAa;EAAEI;AAAe,CAAC,GAAGP,aAAa,CAACc,OAAO;AACtE,eAAed,aAAa,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}